{"version":3,"sources":["images/1.jpg","images/2.jpg","images/3.jpg","images/4.jpg","images/5.jpg","images/6.jpg","images/7.jpg","apis/apiCalls.js","components/LoginForm/LoginForm.js","components/MovieCard/MovieCard.js","components/MoviesContainer/MoviesContainer.js","components/NavBar/NavBar.js","components/Quote/Quote.js","components/QuoteContainer/QuoteContainer.js","components/CharacterCard/CharacterCard.js","components/CharactersContainer/CharactersContainer.js","components/SelectedMovie/SelectedMovie.js","components/Favorites/Favorites.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","fetchFilms","fetch","then","response","json","films","filmData","results","map","film","index","title","episode_id","release_date","opening_crawl","filmId","sort","a","b","console","log","getCharacters","filmUrl","characters","splice","characterInfo","character","getCharacter","name","homeworld","species","relatedFilms","Promise","all","characterUrl","home","getHomeworld","speciesName","getSpeciesData","x","relatedMovies","getRelatedFilms","homeworldUrl","population","speciesArray","speciesInfo","speciesType","getSpecies","speciesUrl","filmsArray","getFilmName","LoginForm","handleChange","e","preventDefault","setState","target","value","handleClick","event","state","quote","skillLevel","props","addUserInfo","this","type","className","placeholder","onChange","to","onClick","Component","images","1","one","2","two","3","three","4","four","5","five","6","six","7","seven","MovieCard","episode","releaseYear","getDetails","src","alt","id","slice","rel","href","MoviesContainer","key","openingCrawl","NavBar","skill","handleMovieChange","favorites","wipeUserInfo","length","Quote","opening","toUpperCase","QuoteContainer","movie","description","CharacterCard","homeworldName","homeworldPop","handleFavorite","checkFavorites","filmsList","CharactersContainer","SelectedMovie","Favorites","favoriteCards","favorite","App","componentDidMount","userData","userInfo","currentCharacters","catch","error","characterObj","includes","characterObject","editedFaves","filter","toggleNavBar","Array","isArray","exact","path","render","match","params","filteredMovie","find","parseInt","Boolean","window","location","hostname","router","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb2f1d20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.6b7da538.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.8b3cf9f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.36c356ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.d0e73923.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.df37c5e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.1568d5fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.c7153bc9.jpg\";","export const fetchFilms = () => {\n  return fetch('https://swapi.co/api/films/')\n    .then(response => response.json())\n    .then(films => {\n      const filmData = films.results.map((film, index) => {\n        const { title, episode_id, release_date, opening_crawl } = film;\n        var filmId\n        if (film.episode_id >= 4 && film.episode_id <= 6) {\n          filmId = film.episode_id - 3\n        } else if (film.episode_id >= 1 && film.episode_id <= 3) {\n          filmId = film.episode_id + 3\n        } else {\n          filmId = film.episode_id\n        }\n        return { title, episode_id, release_date, filmId, opening_crawl }\n      }).sort((a, b) => a.episode_id - b.episode_id)\n      console.log('film data', filmData)\n      return filmData;\n    })\n}\n\nexport const getCharacters = filmUrl => {\n  return fetch(filmUrl)\n    .then(response => response.json())\n    .then(response => response.characters)\n    .then(response => response.splice(0, 10))\n    .then(film => {\n      const characterInfo = film.map(character => {\n        return getCharacter(character).then(character => ({\n          name: character[0],\n          homeworld: character[1],\n          species: character[2],\n          relatedFilms: character[3]\n        }))\n      })\n      return Promise.all(characterInfo)\n    })\n}\n\nexport const getCharacter = characterUrl => {\n  return fetch(characterUrl)\n    .then(response => response.json())\n    .then(character => {\n      const { name } = character\n      const home = getHomeworld(character.homeworld)\n      const speciesName = getSpeciesData(character.species).then(x => [...x])\n      const relatedMovies = getRelatedFilms(character.films)\n      return Promise.all([name, home, speciesName, relatedMovies])\n    })\n}\n\nexport const getHomeworld = homeworldUrl => {\n  return fetch(homeworldUrl)\n    .then(response => response.json())\n    .then(homeworld => {\n      const { name, population } = homeworld\n      return { name, population }\n    })\n}\n\nconst getSpeciesData = speciesArray => {\n  const speciesInfo = speciesArray.map(speciesType => {\n    return getSpecies(speciesType).then(name => name)\n  })\n  return Promise.all(speciesInfo)\n}\n\nexport const getSpecies = speciesUrl => {\n  return fetch(speciesUrl)\n    .then(response => response.json())\n    .then(species => species.name)\n}\n\nconst getRelatedFilms = filmsArray => {\n  const relatedFilms = filmsArray.map(film => {\n    return getFilmName(film).then(title => title)\n  })\n  return Promise.all(relatedFilms)\n}\n\nexport const getFilmName = filmUrl => {\n  return fetch(filmUrl)\n    .then(response => response.json())\n    .then(film => film.title)\n}","import React, { Component } from 'react';\nimport './LoginForm.scss';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass LoginForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      quote: '',\n      skillLevel: ''\n    }\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleClick = (event) => {\n    const { name, quote, skillLevel } = this.state;\n    if (!name || !quote || !skillLevel) {\n      event.preventDefault()\n    } else {\n      this.props.addUserInfo(this.state)\n    }\n  }\n\n  render() {\n    const { name, quote } = this.state\n    return (\n      <form>\n        <h1>STAR WARS HUB</h1>\n        <h4>Join the force</h4>\n        <label>Name</label>\n        <input\n          type='text'\n          name='name'\n          className='input-1'\n          value={name}\n          placeholder='Enter name here'\n          onChange={(e) => this.handleChange(e)}\n        />\n        <label>Quote</label>\n        <input\n          type='text'\n          name='quote'\n          className='input-2'\n          value={quote}\n          placeholder='Enter your favorite Star Wars quote'\n          onChange={(e) => this.handleChange(e)}\n        />\n        <label>Skill Level</label>\n        <select\n          name=\"skillLevel\"\n          onChange={(e) => this.handleChange(e)}\n        >\n          <option value=''>Select Skill Level</option>\n          <option value='Jedi Initiate'>Jedi Initiate</option>\n          <option value='Jedi Knight'>Jedi Knight</option>\n          <option value='Jedi Master'>Jedi Master</option>\n        </select>\n        <div>\n          <Link to=\"/movies\" >\n            <button\n              type='button'\n              onClick={(event) => this.handleClick(event)}>\n              Submit\n            </button>\n          </Link>\n        </div>\n      </form >\n    )\n  }\n}\n\nLoginForm.propTypes = {\n  name: PropTypes.string,\n  quote: PropTypes.string,\n  skillLevel: PropTypes.string\n};\n\nexport default LoginForm","import React from 'react';\nimport './MovieCard.scss';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport one from '../../images/1.jpg';\nimport two from '../../images/2.jpg';\nimport three from '../../images/3.jpg';\nimport four from '../../images/4.jpg';\nimport five from '../../images/5.jpg';\nimport six from '../../images/6.jpg';\nimport seven from '../../images/7.jpg';\n\nconst images = {\n  1: [one, 'https://www.youtube.com/watch?v=bD7bpG-zDJQ', 'https://www.amazon.com/Star-Wars-Episode-Phantom-Widescreen/dp/B00003CX5P'],\n  2: [two, 'https://www.youtube.com/watch?v=gYbW1F_c9eM', 'https://www.amazon.com/Star-Wars-Episode-Attack-Widescreen/dp/B00006HBUJ'],\n  3: [three, 'https://www.youtube.com/watch?v=5UnjrG_N8hU', 'https://www.amazon.com/Star-Wars-Episode-Revenge-Widescreen/dp/B00005JLXH'],\n  4: [four, 'https://www.youtube.com/watch?v=MpkrMqmmy5k', 'https://www.amazon.com/Star-Wars-Episode-IV-Limited/dp/B000FQJAIW'],\n  5: [five, 'https://www.youtube.com/watch?v=xESiohGGP7g', 'https://www.amazon.com/Star-Wars-Empire-Strikes-Limited/dp/B000FQJAJG'],\n  6: [six, 'https://www.youtube.com/watch?v=MYD_xxY5wEI', 'https://www.amazon.com/Star-Wars-Episode-VI-Limited/dp/B000FQVX78'],\n  7: [seven, 'https://www.youtube.com/watch?v=sGbxmsDFVnE', 'https://www.amazon.com/Star-Wars-Episode-2Blu-Ray-subtitles/dp/B01EFU2GKC']\n}\n\nconst MovieCard = ({ title, episode, releaseYear, filmId, getDetails }) => {\n  return (\n    <section\n      className={`movie-card movie-card-${episode} {filmId}`}\n      onClick={(e) => getDetails(filmId)}\n    >\n      <img\n        src={images[episode][0]}\n        className='poster-image'\n        alt={`Episode ${episode} movie poster`}\n      />\n      <h3 onClick={(e) => console.log(e.target.id)}>{title}</h3>\n      <p className='movie-card-text'>Episode {episode}</p>\n      <p className='movie-card-text'>{releaseYear.slice(0, 4)}</p>\n      <a className='text-link' target=\"_blank\" rel=\"noopener noreferrer\" href={images[episode][2]} >Buy Movie</a>\n      <a className='text-link' target=\"_blank\" rel=\"noopener noreferrer\" href={images[episode][1]}>Watch Trailer</a>\n      <Link to={`/movies/${episode}`} className='character-link'>View Characters</Link>\n    </section>\n  )\n}\n\nMovieCard.propTypes = {\n  title: PropTypes.string,\n  episode: PropTypes.number,\n  releaseYear: PropTypes.string,\n  filmId: PropTypes.number,\n  getDetails: PropTypes.func\n};\n\nexport default MovieCard;","import React from 'react';\nimport './MoviesContainer.scss';\nimport MovieCard from '../MovieCard/MovieCard';\nimport PropTypes from 'prop-types';\n\nconst MoviesContainer = ({ films, getDetails }) => {\n  return (\n    <main>\n      {films.map(film => {\n        const { title, episode_id, release_date, filmId, opening_crawl } = film\n        return < MovieCard\n          key={episode_id}\n          title={title}\n          episode={episode_id}\n          releaseYear={release_date}\n          filmId={filmId}\n          openingCrawl={opening_crawl}\n          getDetails={getDetails}\n        />\n      })}\n    </main>\n  )\n}\n\nMoviesContainer.propTypes = {\n  title: PropTypes.string,\n  episode_id: PropTypes.string,\n  release_date: PropTypes.number,\n  filmId: PropTypes.number,\n  getDetails: PropTypes.func\n};\n\nexport default MoviesContainer;","import React from 'react'\nimport './NavBar.scss';\nimport { NavLink, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst NavBar = ({ name, quote, skill, handleMovieChange, favorites, wipeUserInfo }) => {\n  return (\n    <nav>\n      <header>\n        <ul>\n          <div className='user-info-nav'>\n            <li className='user-info'>Name: <span>{name}</span></li>\n            <li className='user-info'>Favorite Quote: <span>{quote}</span></li>\n            <li className='user-info'>Skill Level: <span>{skill}</span></li>\n          </div>\n        </ul>\n      </header>\n      <footer>\n        <ul>\n          <div>\n            <li>\n              <NavLink to='/movies' className='nav-link' onClick={(e) => handleMovieChange()}>\n                Movies\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to='/favorites' className='nav-link'>\n                Favorites: {favorites.length}\n              </NavLink>\n            </li>\n          </div>\n          <li>\n            <Link to='/' className='nav-link-logout' onClick={() => wipeUserInfo()}>\n              Log out\n                        </Link>\n          </li>\n        </ul>\n      </footer>\n    </nav>\n  )\n}\n\nNavBar.propTypes = {\n  name: PropTypes.string,\n  quote: PropTypes.string,\n  skill: PropTypes.string\n};\n\nexport default NavBar","import React from 'react';\nimport './Quote.scss';\nimport PropTypes from 'prop-types';\n\nconst Quote = ({ episode, title, opening }) => {\n  return (\n    <div className=\"galaxy\">\n      <div className=\"fall\">\n        <p>\n          <i>{episode}: {title.toUpperCase()}</i>\n          {opening}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nQuote.propTypes = {\n  episode: PropTypes.number,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default Quote","import React from 'react';\nimport './QuoteContainer.scss';\nimport Quote from '../Quote/Quote';\nimport PropTypes from 'prop-types';\n\nconst QuoteContainer = ({ movie }) => {\n  const { episode_id, title, description, opening_crawl } = movie;\n  return (\n    <section className='quote-container'>\n      <Quote\n        episode={episode_id}\n        opening={opening_crawl}\n        title={title}\n        description={description}\n      />\n    </section>\n  )\n}\n\nQuoteContainer.propTypes = {\n  movie: PropTypes.object,\n  episode_id: PropTypes.number,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default QuoteContainer;","import React from 'react';\nimport './CharacterCard.scss';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = ({ name, species, homeworldName, homeworldPop, relatedFilms, handleFavorite, checkFavorites }) => {\n  const filmsList = relatedFilms.map((film, index) => {\n    return (\n      <li\n        key={index}\n        className='character-movie-list'>- {film}\n      </li>\n    )\n  })\n  return (\n    <article className='character-info'>\n      <h5 className='character-name'>{name}</h5>\n      <hr />\n      <h5 className='character-species'>species: <span>{species}</span></h5>\n      <h5 className='character-species'> homeworld: <span>{homeworldName}</span></h5>\n      <h5 className='character-species'>population: <span>{homeworldPop}</span> </h5>\n      <h5 className='character-rel-movies'>appears in: {filmsList}</h5>\n      <button\n        className='button-favorite'\n        onClick={() => handleFavorite({ name, species, homeworldName, homeworldPop, relatedFilms })}>\n        {!checkFavorites({ name, species, homeworldName, homeworldPop, relatedFilms })\n          ? 'Add to favorites'\n          : 'Remove from favorites'}\n      </button>\n    </article>\n  )\n}\n\nCharacterCard.propTypes = {\n  name: PropTypes.string,\n  species: PropTypes.array,\n  homeworldName: PropTypes.string,\n  homeworldPop: PropTypes.string,\n  relatedFilms: PropTypes.array,\n};\n\nexport default CharacterCard;","import React from 'react';\nimport './CharactersContainer.scss';\nimport CharacterCard from '../CharacterCard/CharacterCard'\nimport PropTypes from 'prop-types';\n\nconst CharactersContainer = ({ characters, handleFavorite, checkFavorites }) => {\n  return (\n    <section className='characters-cont'>\n      {characters.map((character, index) => {\n        const { name, species, homeworld, relatedFilms } = character;\n        return <CharacterCard\n          key={index}\n          name={name}\n          species={species}\n          homeworldName={homeworld.name}\n          homeworldPop={homeworld.population}\n          relatedFilms={relatedFilms}\n          handleFavorite={handleFavorite}\n          checkFavorites={checkFavorites}\n        />\n      })}\n    </section>\n  )\n}\n\nCharactersContainer.propTypes = {\n  character: PropTypes.object,\n  index: PropTypes.number,\n  name: PropTypes.string,\n  species: PropTypes.string,\n  homeworld: PropTypes.object,\n  relatedFilms: PropTypes.array,\n};\n\nexport default CharactersContainer","import React from 'react';\nimport QuoteContainer from '../QuoteContainer/QuoteContainer';\nimport CharactersContainer from '../CharactersContainer/CharactersContainer';\nimport PropTypes from 'prop-types';\n\nconst SelectedMovie = ({ movie, characters, handleFavorite, checkFavorites }) => {\n  return (\n    <main className='selected-movie'>\n      <QuoteContainer movie={movie} />\n      {!characters.length\n        ? <img\n          className='loading-image'\n          src=\"https://cdn.dribbble.com/users/361263/screenshots/3051905/imperial_emblem.gif\"\n          alt=\"\" />\n        : <CharactersContainer\n          characters={characters}\n          handleFavorite={handleFavorite}\n          checkFavorites={checkFavorites}\n        />\n      }\n    </main>\n  )\n}\n\nSelectedMovie.propTypes = {\n  movie: PropTypes.object,\n  characters: PropTypes.array\n};\n\nexport default SelectedMovie;","import React from 'react';\nimport './Favorites.scss';\nimport PropTypes from 'prop-types';\nimport CharacterCard from '../CharacterCard/CharacterCard';\n\nconst Favorites = ({ favorites, handleFavorite, checkFavorites }) => {\n\n  const favoriteCards =\n    favorites.map((favorite, index) => {\n      const { name, species, homeworldName, homeworldPop, relatedFilms } = favorite;\n      return <CharacterCard\n        key={index}\n        name={name}\n        species={species}\n        homeworldName={homeworldName}\n        homeworldPop={homeworldPop}\n        relatedFilms={relatedFilms}\n        handleFavorite={handleFavorite}\n        checkFavorites={checkFavorites}\n      />\n    });\n\n  return (\n    <section>\n      <h1>Favorite Characters</h1>\n      {favorites.length\n        ? favoriteCards\n        : <h2 className='add-characters'>Add characters in the movie section</h2>\n      }\n    </section>\n  )\n}\n\nFavorites.propTypes = {\n  favorites: PropTypes.array,\n  handleFavorite: PropTypes.func\n};\n\nexport default Favorites;","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport './App.scss';\nimport { fetchFilms, getCharacters } from '../../apis/apiCalls';\nimport LoginForm from '../LoginForm/LoginForm'\nimport MoviesContainer from '../MoviesContainer/MoviesContainer';\nimport NavBar from '../NavBar/NavBar';\nimport SelectedMovie from '../SelectedMovie/SelectedMovie';\nimport Favorites from '../Favorites/Favorites';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      films: [],\n      userInfo: [],\n      currentCharacters: [],\n      favorites: []\n    }\n  }\n\n  componentDidMount = () => {\n    fetchFilms().then(response => this.setState({\n      films: response\n    }))\n  }\n\n  addUserInfo = (userData) => {\n    this.setState({ userInfo: userData })\n  }\n\n  getDetails = (id) => {\n    return getCharacters(`https://swapi.co/api/films/${id}`)\n      .then(response => this.setState({ currentCharacters: response }))\n      .then(() => console.log('done!'))\n      .catch(error => console.log('error', error))\n  }\n\n  checkFavorites = characterObj => {\n    let faveNames = this.state.favorites.map(favorite => favorite.name)\n    return faveNames.includes(characterObj.name)\n  }\n\n  handleMovieChange = () => {\n    if (this.state.currentCharacters.length !== 0) {\n      this.setState({ currentCharacters: [] })\n    }\n  }\n\n  handleFavorite = (characterObject) => {\n    const editedFaves = this.state.favorites.filter(favorite => favorite.name !== characterObject.name)\n    !this.checkFavorites(characterObject)\n      ? this.setState({ favorites: [...this.state.favorites, characterObject] })\n      : this.setState({ favorites: editedFaves })\n  }\n\n  wipeUserInfo = () => {\n    this.setState({\n      userInfo: []\n    })\n  }\n\n  render() {\n    const { currentCharacters, films, userInfo, favorites } = this.state;\n    const { name, quote, skillLevel } = userInfo;\n    const toggleNavBar =\n      !Array.isArray(userInfo) &&\n      <NavBar\n        name={name}\n        quote={quote}\n        skill={skillLevel}\n        handleMovieChange={this.handleMovieChange}\n        favorites={favorites}\n        wipeUserInfo={this.wipeUserInfo}\n      />;\n\n    return (\n      <div className=\"App\">\n        {toggleNavBar}\n        <Route exact path='/' render={\n          () => { return (<LoginForm addUserInfo={this.addUserInfo} />) }\n        } />\n        <Route exact path='/favorites' render={\n          () => {\n            return !name\n              ? <Redirect to='/' />\n              : <Favorites\n                favorites={favorites}\n                handleFavorite={this.handleFavorite}\n                checkFavorites={this.checkFavorites}\n              />\n          }\n        } />\n        <Route exact path='/movies' render={() => {\n          return !name\n            ? <Redirect to='/' />\n            : <MoviesContainer\n              films={films}\n              getDetails={this.getDetails} />\n        }\n        } />\n        <Route exact path='/movies/:episode' render={({ match }) => {\n          const { episode } = match.params\n          const filteredMovie = films.find(film => film.episode_id === parseInt(episode))\n          return !name\n            ? <Redirect to='/' />\n            : <SelectedMovie\n              characters={currentCharacters}\n              movie={filteredMovie}\n              handleFavorite={this.handleFavorite}\n              checkFavorites={this.checkFavorites}\n            />\n        }} />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  addUserInfo: PropTypes.func,\n  getDetails: PropTypes.func,\n  name: PropTypes.string,\n  quote: PropTypes.string,\n  skillLevel: PropTypes.string,\n  films: PropTypes.array,\n  currentCharacters: PropTypes.array,\n  userInfo: PropTypes.string,\n  favorites: PropTypes.array,\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}